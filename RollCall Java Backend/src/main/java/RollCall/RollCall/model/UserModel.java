package RollCall.RollCall.model;

import jakarta.persistence.*;
import java.math.BigDecimal;

@Entity
@Table(name = "users") // Maps the class to the "users" table
public class UserModel {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Maps the identity column
    @Column(name = "userid", nullable = false, unique = true)
    private Long userId;

    @Column(name = "username", nullable = false, unique = true)
    private String username;

    @Column(name = "password", nullable = false)
    private String password;

    @Column(name = "first_name", nullable = false)
    private String firstName;

    @Column(name = "last_name", nullable = false)
    private String lastName;

    @Column(name = "address")
    private String address;

    @Column(name = "phone")
    private Long phone;

    @Column(name = "email")
    private String email;

    @Column(name = "position")
    private String position;

    @Column(name = "payrate", precision = 7, scale = 2)
    private BigDecimal payRate;

    @Column(name = "manager_access", nullable = false)
    private Boolean managerAccess = false;

    @ManyToOne // Indicates a foreign key relationship
    @JoinColumn(name = "employerid", foreignKey = @ForeignKey(name = "users_employerid_fkey"))
    private UserModel employer;

    // Getters and setters

    public Long getUserId() {
        return userId;
    }
    //No setUserID because the database uses an auto_fill identity function for this column.
    //It should never be set manually.

    public String getUsername() {
        return username;
    }
    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }
    public void setPassword(String password) {
        this.password = password;
    }

    public String getFirstName() {
        return firstName;
    }
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getAddress() {
        return address;
    }
    public void setAddress(String address) {
        this.address = address;
    }

    public Long getPhone() {
        return phone;
    }
    public void setPhone(Long phone) {
        this.phone = phone;
    }

    public String getEmail() {
        return email;
    }
    public void setEmail(String email) {
        this.email = email;
    }

    public String getPosition() {
        return position;
    }
    public void setPosition(String position) {
        this.position = position;
    }

    public BigDecimal getPayRate() {
        return payRate;
    }
    public void setPayRate(BigDecimal payRate) {
        this.payRate = payRate;
    }

    public Boolean getManagerAccess() {
        return managerAccess;
    }
    public void setManagerAccess(Boolean managerAccess) {
        this.managerAccess = managerAccess;
    }

    public UserModel getEmployer() {
        return employer;
    }
    public void setEmployer(UserModel employer) {
        this.employer = employer;
    }
}

/*
 * This is a database entity class.
 * It represents a table in the database and maps each column in the table to a corresponding field in the class.
 * Spring Data JPA uses this class to interact with the database via repositories.
 * The primary key is annotated with @Id, and relationships between tables are defined using annotations like @ManyToOne or @OneToMany.
 * Instances of this class correspond to individual rows in the table, and fields represent the row's column values.
 * Note: The primary key is auto-generated by the database, so it should never be set manually.
 */
