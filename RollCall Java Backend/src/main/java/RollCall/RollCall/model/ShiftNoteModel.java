package RollCall.RollCall.model;

import jakarta.persistence.*;

@Entity
@Table(name = "shift_notes") // Maps to the "shift_notes" table
public class ShiftNoteModel {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Auto-generated identity column
    @Column(name = "note_id", nullable = false, unique = true)
    private Long noteId;

    @ManyToOne // Foreign key relationship to the Shift table
    @JoinColumn(name = "shift_id", nullable = false, foreignKey = @ForeignKey(name = "shift_notes_shift_id_fk"))
    private ShiftModel shiftModel;

    @Column(name = "note_text")
    private String noteText;

    // Getters and setters

    public Long getNoteId() {
        return noteId;
    }
    // No setNoteId because the database uses an auto_fill identity function for this column.
    // It should never be set manually.

    public ShiftModel getShift() {
        return shiftModel;
    }
    public void setShift(ShiftModel shiftModel) {
        this.shiftModel = shiftModel;
    }

    public String getNoteText() {
        return noteText;
    }
    public void setNoteText(String noteText) {
        this.noteText = noteText;
    }
}

/*
 * This is a database entity class.
 * It represents a table in the database and maps each column in the table to a corresponding field in the class.
 * Spring Data JPA uses this class to interact with the database via repositories.
 * The primary key is annotated with @Id, and relationships between tables are defined using annotations like @ManyToOne or @OneToMany.
 * Instances of this class correspond to individual rows in the table, and fields represent the row's column values.
 * Note: The primary key is auto-generated by the database, so it should never be set manually.
 */
